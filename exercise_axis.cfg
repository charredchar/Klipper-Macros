[gcode_macro EXERCISE_AXES]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    {% set axis = params.AXIS %}

    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
        {% set z_min = printer.toolhead.axis_minimum.z + bound + 20 %}
        {% set z_max = printer.toolhead.axis_maximum.z - bound - 50 %}

    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        {% set z_center = (printer.toolhead.axis_minimum.z|float + printer.toolhead.axis_maximum.z|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}
        {% set z_center_min = z_center - (smallpatternsize/2) %}
        {% set z_center_max = z_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=EXERCISE_AXES
    
    # Output parameters to g-code terminal
    { action_respond_info("EXERCISE_AXES: starting %d iterations at speed %d, accel %d on axis %s" % (iterations, speed, accel, axis)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        {% if printer.toolhead.homed_axes != "xyz" %}
            G28
        {% endif %}        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{x_center} Y{y_center} Z20 F{speed*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G4 P1000 

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel}

    {% for i in range(iterations) %}
        {% if axis == 'x' %}
            G0 X{x_min} F{speed*60}
            G0 X{x_max} F{speed*60}
            M117 EXERCISE_AXES: Finished Iteration: {i + 1} of {iterations}
        {% elif axis == 'y' %}
            G0 Y{y_min} F{speed*60}
            G0 Y{y_max} F{speed*60}
            M117 EXERCISE_AXES: Finished Iteration: {i + 1} of {iterations}
        {% elif axis == 'z' %}
            G0 Z{z_max} F{speed*60}
            G0 Z{z_min} F{speed*60}
            M117 EXERCISE_AXES: Finished Iteration: {i + 1} of {iterations}
        {% elif axis == 'a' %}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            M117 EXERCISE_AXES: Finished Iteration: {i + 1} of {iterations}
        {% elif axis == 'b' %}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            M117 EXERCISE_AXES: Finished Iteration: {i + 1} of {iterations}
        {% else %}
            M117 No axis defined, nothing done.
        {% endif %}
        M400
    {% endfor %}

    {% if axis == 'x' %}
        G1 X{x_center} F{speed*60}
    {% elif axis == 'y' %}
        G1 Y{y_center} F{speed*60}
    {% elif axis == 'z' %}
        G1 Z{z_center} F{speed*60}
    {% elif axis == 'a' %}
        G1 X{x_center} Y{y_center} F{speed*60}
    {% elif axis == 'b' %}
        G1 X{x_center} Y{y_center} F{speed*60}
    {% else %}
        M117 No axis defined, nothing done.
    {% endif %}



    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G90
        G4 P1000 

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=EXERCISE_AXES
